const validate = require("schema-utils"); module.exports = (function opl (parse, name = "Wrapper JSON Loader") { return (function (s) { validate({ type: "object", properties: { test: { type: "string" }}}, this?.getOptions(), { name: name, baseDataPath: "options" }); const obj = parse(s); const context = (function r(v) { if (typeof v == "object" && !Array.isArray(v)) { if (v == null) { return "null"; }; const k = Object.keys(v); let c = "{"; for (let i = 0; i < k.length; i++) { let l = k[i]; let t = r(v[l]); c += `${l}:${t}`; if (((i+1) < k.length)) { c += ","; }; }; c += "}"; return c; } else if (typeof v == "object") { let c = "["; for (let i = 0; i < v.length; i++) { let t = r(v[i]); c += `${t}`; if (((i+1) < v.length)) { c += ","; }; }; c += "]"; return c; } else if (typeof v == "number") { return `${v}`; } else if (typeof v == "boolean") { return !!v ? "true" : "false"; } else if (typeof v == "string") { return "\"" + v + "\""; }; return "null"; })(obj); return `export default ${context};`;});})